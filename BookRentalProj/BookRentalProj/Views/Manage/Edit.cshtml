@model BookRentalProj.Models.IndexViewModel
@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h3>Update profile and account settings</h3>
        <hr />
        @* Consolidated error messages *@
        @Html.ValidationSummary(true, "", new {@class="text-danger"})
        @* Hidden field for Id to pass when submitting the form *@
        @Html.HiddenFor(x => x.Id)
        <div class="form-horizontal">
            <div class="form-border">
                <div class="form-group">
                    @Html.LabelFor(x => x.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.FirstName, "", new {@class="text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger"  })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.BirthDate, "{0: dd/MM/yyyy}", new { htmlAttributes = new { @class = "from-control" } })
                        @Html.ValidationMessageFor(x => x.BirthDate, "", new { @class = "text-danger"  })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Phone, "", new { @class = "text-danger"  })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger"  })
                    </div>
                </div>

                <fieldset disabled>
                    <div class="form-group">
                        @Html.LabelFor(x => x.MembershipTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => x.MembershipTypeId, new SelectList(Model.MembershipTypes, "id", "name"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.MembershipTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <br />
                <div class="col-md-offset-2">
                    <input type="submit" value="Update Profile" class="btn btn-sm btn-success"/>
                    <a href="@Url.Action("Index")" type="button" class="btn btn-sm btn-primary">
                        <span class="glyphicon glyphicon-list"></span>
                        <span>Back</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
}